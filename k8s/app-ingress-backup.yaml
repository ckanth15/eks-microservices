apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/group.name: eks-microservices
    alb.ingress.kubernetes.io/group.order: "1"
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-port: "80"
    alb.ingress.kubernetes.io/ip-address-type: ipv4
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/success-codes: 200,302
    alb.ingress.kubernetes.io/tags: Environment=production,Project=eks-microservices
    alb.ingress.kubernetes.io/target-type: ip
    argocd.argoproj.io/tracking-id: eks-microservices:networking.k8s.io/Ingress:eks-microservices/app-ingress
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{"alb.ingress.kubernetes.io/group.name":"eks-microservices","alb.ingress.kubernetes.io/group.order":"1","alb.ingress.kubernetes.io/healthcheck-path":"/health","alb.ingress.kubernetes.io/healthcheck-port":"80","alb.ingress.kubernetes.io/ip-address-type":"ipv4","alb.ingress.kubernetes.io/listen-ports":"[{\"HTTP\": 80}]","alb.ingress.kubernetes.io/load-balancer-attributes":"idle_timeout.timeout_seconds=60","alb.ingress.kubernetes.io/scheme":"internet-facing","alb.ingress.kubernetes.io/success-codes":"200,302","alb.ingress.kubernetes.io/tags":"Environment=production,Project=eks-microservices","alb.ingress.kubernetes.io/target-type":"ip","argocd.argoproj.io/tracking-id":"eks-microservices:networking.k8s.io/Ingress:eks-microservices/app-ingress","kubernetes.io/ingress.class":"alb"},"name":"app-ingress","namespace":"eks-microservices"},"spec":{"rules":[{"host":"app.eks-microservices.local","http":{"paths":[{"backend":{"service":{"name":"user-service","port":{"number":80}}},"path":"/api/users","pathType":"Prefix"},{"backend":{"service":{"name":"user-service","port":{"number":80}}},"path":"/api/auth","pathType":"Prefix"},{"backend":{"service":{"name":"product-service","port":{"number":80}}},"path":"/api/products","pathType":"Prefix"},{"backend":{"service":{"name":"order-service","port":{"number":80}}},"path":"/api/orders","pathType":"Prefix"},{"backend":{"service":{"name":"frontend","port":{"number":80}}},"path":"/","pathType":"Prefix"}]}}]}}
    kubernetes.io/ingress.class: alb
  creationTimestamp: "2025-08-24T07:01:10Z"
  finalizers:
  - group.ingress.k8s.aws/eks-microservices
  generation: 1
  name: app-ingress
  namespace: eks-microservices
  resourceVersion: "127339"
  uid: c586ae90-c3c9-4069-aea5-87135f47f5c0
spec:
  rules:
  - host: app.eks-microservices.local
    http:
      paths:
      - backend:
          service:
            name: user-service
            port:
              number: 80
        path: /api/users
        pathType: Prefix
      - backend:
          service:
            name: user-service
            port:
              number: 80
        path: /api/auth
        pathType: Prefix
      - backend:
          service:
            name: product-service
            port:
              number: 80
        path: /api/products
        pathType: Prefix
      - backend:
          service:
            name: order-service
            port:
              number: 80
        path: /api/orders
        pathType: Prefix
      - backend:
          service:
            name: frontend
            port:
              number: 80
        path: /
        pathType: Prefix
status:
  loadBalancer:
    ingress:
    - hostname: k8s-eksmicroservices-bef7242b37-2114671741.us-east-1.elb.amazonaws.com
