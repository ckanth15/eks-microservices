apiVersion: v1
kind: Secret
metadata:
  name: order-service-secret
  namespace: eks-microservices
type: Opaque
data:
  jwt-secret: b3JkZXItc2VjcmV0 # order-secret in base64
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: order-service-config
  namespace: eks-microservices
data:
  NODE_ENV: "production"
  PORT: "3003"
  DB_HOST: "postgres"
  DB_PORT: "5432"
  DB_NAME: "eks_microservices"
  DB_USER: "postgres"
  DB_PASSWORD: "password"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: eks-microservices
  labels:
    app: order-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - name: order-service
        image: 063278365748.dkr.ecr.us-east-1.amazonaws.com/order-service:latest
        ports:
        - containerPort: 3003
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: order-service-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: order-service-config
              key: PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: order-service-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: order-service-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: order-service-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: order-service-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: eks-microservices
spec:
  selector:
    app: order-service
  ports:
  - port: 80
    targetPort: 3003
  type: ClusterIP
